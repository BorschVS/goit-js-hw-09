{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,S,WAGA,IAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,wBACpCI,UAAWL,SAASC,cAAc,0BAGhCK,EAAiB,EAqBrB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCT,GAAkB,EAElBU,YAAW,WACLH,EACFF,EAAQf,EAAAqB,OAAOC,QAAQ,qBAAoCC,OAAfX,EAAS,QAAYW,OAANV,EAAM,QAEjEG,EAAOhB,EAAAqB,OAAOG,QAAQ,oBAAmCD,OAAfX,EAAS,QAAYW,OAANV,EAAM,O,GAEhEA,E,IA9BPX,EAAKO,UAAUgB,iBAAiB,SAIhC,SAAkBC,GAChBA,EAAEC,iBACFjB,EAAiB,EAMjB,IAJA,IAAIG,EAAQe,OAAO1B,EAAKI,WAAWuB,OAC7BC,EAASF,OAAO1B,EAAKM,YAAYqB,OACjCE,EAAOH,OAAO1B,EAAKK,UAAUsB,OAE1BG,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAC/BrB,EAAcD,EAAgBG,GAC3BoB,KAAKvB,EAAiBG,GAASkB,GAC/BG,MAAM,IAAIC,MAAM,oB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.6.min.js';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayField: document.querySelector('input[name=\"delay\"]'),\n  stepField: document.querySelector('input[name=\"step\"]'),\n  amountField: document.querySelector('input[name=\"amount\"]'),\n  submitBtn: document.querySelector('button[type=\"submit\"]'),\n};\n\nlet promiseCounter = 1;\n\nrefs.submitBtn.addEventListener('click', onSubmit);\n\n// let amount = refs.form.elements['amount'].value;\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  promiseCounter = 1;\n\n  let delay = Number(refs.delayField.value);\n  const amount = Number(refs.amountField.value);\n  const step = Number(refs.stepField.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(promiseCounter, delay)\n      .then(promiseCounter, (delay += step))\n      .catch(new Error('error in promise'));\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    promiseCounter += 1;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(Notify.success(`Fulfilled promise ${position} in ${delay}ms`));\n      } else {\n        reject(Notify.failure(`Rejected promise ${position} in ${delay}ms`));\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delayField","stepField","amountField","submitBtn","$ce04d3a99e08e73b$var$promiseCounter","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","Notify","success","concat","failure","addEventListener","e","preventDefault","Number","value","amount","step","i","then","catch","Error"],"version":3,"file":"03-promises.bdc951ea.js.map"}